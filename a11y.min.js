"use strict";const a=()=>{const a=a=>document.querySelectorAll(a);(()=>{const a=document.doctype;if(a){const b=a.name;"html"!==b.toLowerCase()&&console.warn("Should add doctype to document!")}else console.warn("Should add doctype to document!")})(),(()=>{const b=a("html")[0];if(b)if(b.hasAttribute("lang")){const a=b.getAttribute("lang");null!==a&&""!==a||console.warn("Should add lang=value attribute to html element!")}else console.warn("Should add lang attribute to html element!")})(),(()=>{const b=a("meta")[0];b?b.hasAttribute("charset")||console.warn("Should add meta charset=utf-8 to document!"):console.warn("Should add meta charset=utf-8 to document!")})(),(()=>{const a=document.title;null!==a&&""!==a||console.warn("Should add title to describe the page content!")})(),(()=>{const b=a("link");for(let c=0;c<b.length;c++){const a=b[c].getAttribute("rel");if("stylesheet"===a)if(b[c].hasAttribute("media")>=0){const a=b[c].getAttribute("media");"print"!==a&&console.warn("Should add print style file to document.")}else console.warn("Should add print style file to document.")}})(),(()=>{const b=a("h1"),c=b.length;c>1&&console.warn("Should h1 exist in page once usually in logo!")})(),(()=>{const b=[...a("h1, h2, h3, h4, h5, h6")],c=b.map(a=>a.nodeName),d=b.filter((a,b)=>c.indexOf(a.nodeName)===b),e=d.length;e>=1&&"H1"!==d[0].nodeName&&console.warn("Should heading start with H1:h6"),e>=2&&"H2"!==d[1].nodeName&&console.warn("Should using H2 after H1 not any heading else."),e>=3&&"H3"!==d[2].nodeName&&console.warn("Should using H3 after H2 not any heading else."),e>=4&&"H4"!==d[3].nodeName&&console.warn("Should using H4 after H3 not any heading else."),e>=5&&"H5"!==d[4].nodeName&&console.warn("Should using H5 after H4 not any heading else.")})(),(()=>{const b=a("img");for(let c=0;c<b.length;c++)if(b[c].hasAttribute("src")){const a=b[c].getAttribute("src");null!==a&&""!==a||console.warn(`Should add src=value to the image.
code: ${b[c].outerHTML}`),b[c].hasAttribute("alt")||console.warn(`Should add alt to the image.
code: ${b[c].outerHTML}`)}else console.warn(`Should add src to the image.
code: ${b[c].outerHTML}`)})(),(()=>{const b=a("a"),c=b[0],d=["skip navigation","skip nav","skip to navigation","skip main navigation","skip to content","skip to main content","skip to search","skip to sidebar"];if(c){const a=c.textContent.toLowerCase();d.indexOf(a)<0&&console.warn("Should add skip to main content link!")}for(let e=0;e<b.length;e++){const a=b[e].textContent.toLowerCase(),c=b[e].getAttribute("href"),d=["more","click","click here","continue","go","here","open link","open"];if(null!==c&&""!==c||console.warn(`Should add href=value to anchor tag.
code: ${b[e].outerHTML}`),d.indexOf(a)>=0&&console.warn(`Should link have a meaningful text to explain where the link goes!
code: ${b[e].outerHTML}`),b[e].hasAttribute("target")){const a=b[e].getAttribute("target");if("_blank"===a)if(b[e].hasAttribute("aria-describedby")||console.warn(`Should add alert to recognize this link will open in new tab.
code: ${b[e].outerHTML}`),b[e].hasAttribute("rel")){const a=b[e].getAttribute("rel");"noopener"!==a&&console.warn(`Should add rel=noopener to 
code:${b[e].outerHTML}`)}else console.warn(`Should add rel=noopener to
code: ${b[e].outerHTML}`)}}})(),(()=>{const b=a("header")[0];if(b)if(b.hasAttribute("role")){const a=b.getAttribute("role");"banner"!==a&&console.warn("Should add role=banner to header!")}else console.warn("Should add role=banner to header!")})(),(()=>{const b=a("nav");for(let c=0;c<b.length;c++){if(b[c].hasAttribute("role")){const a=b[c].getAttribute("role");"navigation"!==a&&console.warn(` Should add role=navigation to nav id: ${b[c].id} & class: ${b[c].className}`)}else console.warn(` Should add role=navigation to nav id: ${b[c].id} & class: ${b[c].className}`);b[c].hasAttribute("aria-label")||console.warn(`Should add aria-label to nav id: ${b[c].id} & class: ${b[c].className}`)}})(),(()=>{const b=a("main")[0];if(b)if(b.hasAttribute("role")){const a=b.getAttribute("role");"main"!==a&&console.warn("Should add role=main to main!")}else console.warn("Should add role=main to main!")})(),(()=>{const b=a("footer")[0];if(b)if(b.hasAttribute("role")){const a=b.getAttribute("role");"contentinfo"!==a&&console.warn("Should add role=contentinfo to footer!")}else console.warn("Should add role=contentinfo to footer!")})(),(()=>{const b=a("section");for(let c=0;c<b.length;c++){if(b[c].hasAttribute("role")){const a=b[c].getAttribute("role");"region"!==a&&console.warn(`Should add role=region to section id: ${b[c].id} & class: ${b[c].className}`)}else console.warn(`Should add role=region to section id: ${b[c].id} & class: ${b[c].className}`);b[c].hasAttribute("aria-labelledby")||console.warn(`Should add aria-labelledby to section id: ${b[c].id} & class: ${b[c].className}`)}})(),(()=>{const b=a("article");for(let c=0;c<b.length;c++)if(b[c].hasAttribute("role")){const a=b[c].getAttribute("role");"article"!==a&&console.warn(`Should add role=article to article id: ${b[c].id} & class: ${b[c].className}`)}else console.warn(`Should add role=article to article id: ${b[c].id} & class: ${b[c].className}`)})(),(()=>{const b=a("aside");for(let c=0;c<b.length;c++){if(b[c].hasAttribute("role")){const a=b[c].getAttribute("role");"complementary"!==a&&console.warn(`Should add role=complementary to aside id: ${b[c].id} & class: ${b[c].className}`)}else console.warn(`Should add role=complementary to aside id: ${b[c].id} & class: ${b[c].className}`);b[c].hasAttribute("aria-labelledby")||console.warn(`Should add aria-labelledby to aside id: ${b[c].id} & class: ${b[c].className}`)}})(),(()=>{const b=a("figure");for(let c=0;c<b.length;c++){if(b[c].hasAttribute("role")){const a=b[c].getAttribute("role");"group"!==a&&console.warn(`Should add role=group to figure id: ${b[c].id} & class: ${b[c].className}`)}else console.warn(`Should add role=group to figure id: ${b[c].id} & class: ${b[c].className}`);b[c].hasAttribute("aria-labelledby")||console.warn(`Should add aria-labelledby to figure id: ${b[c].id} & class: ${b[c].className}`)}})(),(()=>{const a=document.forms;for(let b=0;b<a.length;b++){if(a[b].hasAttribute("role")){const c=a[b].getAttribute("role");"form"!==c&&"search"!==c&&console.warn(`Should add role=form OR role=search
code: ${a[b].outerHTML}`)}else console.warn(`Should add role=form OR role=search
code: ${a[b].outerHTML}`);a[b].hasAttribute("aria-labelledby")||console.warn(`Should add aria-labelledby to form
code: ${a[b].outerHTML}`)}})(),(()=>{const b=a("label");for(let c=0;c<b.length;c++){const a=b[c].children.length;if(0===a||a>=2)if(b[c].hasAttribute("for")){const a=b[c].getAttribute("for");null!==a&&""!==a||console.warn(`Should add for=value to label: ${b[c].outerHTML}`)}else console.warn(`Should add for=value to label: ${b[c].outerHTML}`)}})(),(()=>{const b=a("input");for(let c=0;c<b.length;c++){if(b[c].hasAttribute("type")){const a=b[c].getAttribute("type");"submit"!==a&&"reset"!==a||b[c].hasAttribute("value")||console.warn(`Should Add value=value to input
code: ${b[c].outerHTML}`)}else console.warn(`Should Add type=value to input
code: ${b[c].outerHTML}`);b[c].hasAttribute("placeholder")&&(b[c].hasAttribute("aria-label")||console.warn(`the placeholder is not guaranteed to be read by assisitive technowarnies, should include aria-label OR label for element.
code: ${b[c].outerHTML}`))}})(),(()=>{const b=a("iframe");for(let c=0;c<b.length;c++)if(b[c].hasAttribute("src")){const a=b[c].getAttribute("src");if(null!==a&&""!==a||console.warn(`Should add src=value to iframe
code: ${b[c].outerHTML}`),b[c].hasAttribute("title")){const a=b[c].getAttribute("title");null!==a&&""!==a||console.warn(`Should add title=value to iframe
code: ${b[c].outerHTML}`)}else console.warn(`Should add title to iframe
code: ${b[c].outerHTML}`)}else console.warn(`Should add src to iframe
code: ${b[c].outerHTML}`)})(),(()=>{const b=a("button");for(let c=0;c<b.length;c++){const a=b[c].textContent;null!==a&&""!==a||console.warn(`Should add text to button
code: ${b[c].outerHTML}`)}})(),(()=>{const b=a("abbr");for(let c=0;c<b.length;c++)if(b[c].hasAttribute("title")){const a=b[c].getAttribute("title");null!==a&&""!==a||console.warn(`Should add title=value to abbr 
code: ${b[c].outerHTML}`)}else console.warn(`Should add title to abbr 
code: ${b[c].outerHTML}`)})(),(()=>{const b=a("optgroup");for(let c=0;c<b.length;c++)if(b[c].hasAttribute("label")){const a=b[c].getAttribute("label");null!==a&&""!==a||console.warn(`Should add label=value to optgroup
code: ${b[c].outerHTML}`)}else console.warn(`Should add label to optgroup
code: ${b[c].outerHTML}`)})(),(()=>{const b=a("*");for(let c=0;c<b.length;c++)if(b[c].hasAttribute("tabindex")){const a=b[c].getAttribute("tabindex");a>=1&&console.warn(`Avoid using positive integer values for tabindex
code: ${b[c].outerHTML}`)}})(),(()=>{const b=a("*");for(let c=0;c<b.length;c++)(b[c].hasAttribute("onclick")||b[c].hasAttribute("onClick"))&&(b[c].hasAttribute("tabindex")||console.warn(`Please add tabindex to element id: ${b[c].id} & class: ${b[c].className}`))})()};window.addEventListener("load",a);